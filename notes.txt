Name
Experience
Primary Skillset
Experience in Golang (if any)

Timings
Commence : 9:30
Tea break : 11:00 (20 mins)
Lunch break : 13:00 (60 mins)
Tea break : 15:30 (20 mins)
Wind up : 17:30

Why Golang?
    Simplicity
        25 keywords
        NO classes & Inheritance
            Only Structs (state) & functions (behavior)
            Composition over Inheritance
        Abstractions using Interfaces
            Implicity implementation of interfaces
        NO access control modifiers
        Support of Higher Order Functions
            functions can be assigned to variables
            functions can be passed as arguments to other functions
            functions can be retured as a return value from other function

    Faster execution
    Faster build creation
    No support for dynamic libraries
    Built for concurrency  
        Language Feature
            go, chan, select, range
        Scheduler is built in the runtime
        1000s of goroutines can be executed using 1 thread


go version
visual studio code (http://code.visualstudio.com) OR goland 

Data Types
    bool
    string

    int
    int8
    int16
    int32
    int64

    uint
    uint8
    uint16
    uint32
    uint64

    float32
    float64

    complex64 (real float32, imaginary float32)
    complex128 (real float64, imaginary float64)

    byte (alias for uint8)
    rune (alias as int32) (represents 1 character)

    No implicit type conversion

Verbs for formating strings (to use with the "fmt" package)
    https://golang.org/pkg/fmt/

Go Env variables

GOROOT
    path to the go binaries

GOPATH (path where the application source code resides) (before 1.13)
    bin
    pkg
    src
        /github.com
            /tkmagesh77
                /my-app
                    

To create a module file
    go mod init <module_name>

create a 'math' package with a function IsPrime
